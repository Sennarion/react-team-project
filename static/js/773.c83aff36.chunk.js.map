{"version":3,"file":"static/js/773.c83aff36.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ProgressBarContainer = styled.div`\n  height: ${({ theme }) => theme.spacing(2)};\n  margin-top: ${({ theme }) => theme.spacing(2)};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  border: 1px solid #e5f1ef;\n  background-color: #e5f1ef;\n`;\nexport const ProgressBar = styled.div`\n  height: 100%;\n  max-width: 100%;\n  border-radius: ${({ theme }) => theme.spacing(1)};\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport icons from '../../images/icons.svg';\nimport Button from 'components/UI/Button/Button';\nimport Logo from 'components/Logo/Logo';\nimport {\n  FormWrapper,\n  StyledForm,\n  Wrapper,\n  Label,\n  Icon,\n  Input,\n  ErrorMess,\n  LinkTo,\n} from '../LoginForm/LoginForm.styled';\nimport { ProgressBarContainer, ProgressBar } from './RegistrationForm.styled';\nexport default function RegistrationForm() {\n  const [password, setPassword] = useState('');\n\n  const [progressBarStyles, setProgressBarStyles] = useState({\n    width: '0%',\n    backgroundColor: 'transparent',\n  });\n\n  const handlePassword = someValue => {\n    setPassword(someValue);\n  };\n\n  useEffect(() => {\n    const updatedProgressBarStyles = {\n      backgroundColor: 'red',\n      boxShadow: '0px 1px 8px rgba(204, 36, 36, 0.5)',\n    };\n    let totalStrength = 0;\n    if (password.length > 1) {\n      const stengthByLength = Math.min(12, Math.floor(password.length / 6));\n      totalStrength = stengthByLength + password.length;\n    } else {\n      totalStrength = 0;\n    }\n    updatedProgressBarStyles.width = `${totalStrength * 10}%`;\n    if (totalStrength > 8) {\n      updatedProgressBarStyles.backgroundColor = '#24CCA7';\n      updatedProgressBarStyles.boxShadow =\n        '0px 1px 8px rgba(36, 204, 167, 0.5)';\n    } else if (totalStrength > 6) {\n      updatedProgressBarStyles.backgroundColor = 'orange';\n      updatedProgressBarStyles.boxShadow =\n        '0px 1px 8px rgba(204, 173, 36, 0.5)';\n    }\n\n    setProgressBarStyles(updatedProgressBarStyles);\n  }, [password]);\n\n  const dispatch = useDispatch();\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorMess>{message}</ErrorMess>}\n      />\n    );\n  };\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n  const userSchema = yup.object().shape({\n    email: yup\n      .string()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Email may contain letters, @, numbers. For example bar.ba@test.co.uk'\n      )\n      .required(),\n    password: yup\n      .string()\n      .matches(\n        /^.{6,12}$/,\n        'Password must contain minimum 6 to 12 include symbols.'\n      )\n      .required(),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password'), null], 'Your passwords do not match.')\n      .required(),\n    username: yup\n      .string()\n      .matches(\n        /^.{1,12}$/,\n        'Username must contain minimum 1 to 12 include symbols.'\n      )\n      .required(),\n  });\n  const onSubmit = (values, { resetForm }) => {\n    const user = {\n      username: values.username,\n      email: values.email,\n      password: values.password,\n    };\n\n    dispatch(register(user));\n    resetForm();\n  };\n\n  return (\n    <FormWrapper>\n      <Logo />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={userSchema}\n        onSubmit={onSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <StyledForm autoComplete=\"off\">\n            <Wrapper>\n              <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\" \" />\n              <Label htmlFor=\"email\"> E-mail</Label>\n              <Icon>\n                <svg width=\"24\" height=\"24\">\n                  <use href={`${icons}#icon-email`}></use>\n                </svg>\n              </Icon>\n              <FormError name=\"email\" />\n            </Wrapper>\n            <Wrapper>\n              <Input\n                type=\"password\"\n                value={values.password}\n                onChange={e => {\n                  setFieldValue('password', e.currentTarget.value);\n                  let someValue = e.currentTarget.value;\n                  handlePassword(someValue);\n                }}\n                name=\"password\"\n                id=\"password\"\n                placeholder=\" \"\n              />\n              <Label htmlFor=\"password\">Password</Label>\n              <ProgressBarContainer>\n                <ProgressBar style={{ ...progressBarStyles }}></ProgressBar>\n              </ProgressBarContainer>\n              <Icon>\n                <svg width=\"24\" height=\"24\">\n                  <use href={`${icons}#icon-password`}></use>\n                </svg>\n              </Icon>\n              <FormError name=\"password\" />\n            </Wrapper>\n            <Wrapper>\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                id=\"confirmPassword\"\n                placeholder=\" \"\n              />\n              <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n              <Icon>\n                <svg width=\"24\" height=\"24\">\n                  <use href={`${icons}#icon-password`}></use>\n                </svg>\n              </Icon>\n              <FormError name=\"confirmPassword\" />\n            </Wrapper>\n            <Wrapper>\n              <Input\n                type=\"username\"\n                name=\"username\"\n                id=\"username\"\n                placeholder=\" \"\n              />\n              <Label htmlFor=\"username\">First Name</Label>\n              <Icon>\n                <svg width=\"24\" height=\"24\">\n                  <use href={`${icons}#icon-name`}></use>\n                </svg>\n              </Icon>\n              <FormError name=\"username\" />\n            </Wrapper>\n\n            <Wrapper>\n              <Button type=\"submit\">Register</Button>\n            </Wrapper>\n          </StyledForm>\n        )}\n      </Formik>\n      <LinkTo to=\"/login\">log in</LinkTo>\n    </FormWrapper>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/selectors';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport registerTablet1x from '../../images/registerBg-tablet-1x.png';\nimport registerTablet2x from '../../images/registerBg-tablet-2x.png';\nimport registerDesk1x from '../../images/registerBg-desktop-1x.png';\nimport registerDesc2x from '../../images/registerBg-desktop-2x.png';\nimport {\n  Container,\n  LeftSide,\n  RightSide,\n  MainTitle,\n  ImgBox,\n} from '../LoginPage/LoginPage.styled';\n\nexport default function RegisterPage() {\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n    navigate('/', { replace: true });\n  }, [navigate, isLoggedIn]);\n\n  return (\n    <Container>\n      <LeftSide>\n        <ImgBox>\n          <picture>\n            <source\n              srcSet={`${registerDesk1x} 1x, ${registerDesc2x} 2x`}\n              media=\"(min-width: 1200px)\"\n              type=\"image/jpg\"\n            />\n            <source\n              srcSet={`${registerTablet1x} 1x, ${registerTablet2x} 2x`}\n              media=\"(min-width: 768px)\"\n              type=\"image/jpg\"\n            />\n            <img src={`${registerTablet2x}`} alt=\"finance wallet app\" />\n          </picture>\n        </ImgBox>\n        <MainTitle>Finance app</MainTitle>\n      </LeftSide>\n      <RightSide>\n        <RegistrationForm />\n      </RightSide>\n    </Container>\n  );\n}\n"],"names":["ProgressBarContainer","styled","theme","spacing","ProgressBar","RegistrationForm","useState","password","setPassword","width","backgroundColor","progressBarStyles","setProgressBarStyles","useEffect","updatedProgressBarStyles","boxShadow","totalStrength","length","Math","min","floor","dispatch","useDispatch","FormError","name","render","message","userSchema","yup","shape","email","matches","required","confirmPassword","oneOf","username","Logo","initialValues","validationSchema","onSubmit","values","resetForm","user","register","setFieldValue","autoComplete","type","id","placeholder","htmlFor","height","href","icons","value","onChange","e","currentTarget","someValue","handlePassword","style","Button","to","RegisterPage","navigate","useNavigate","isLoggedIn","useSelector","getIsLoggedIn","replace","srcSet","registerDesk1x","registerDesc2x","media","registerTablet1x","registerTablet2x","src","alt"],"sourceRoot":""}